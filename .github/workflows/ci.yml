name: Continuous integration

on:
  push:
  workflow_dispatch:
    inputs:
      deploy_trigger:
        description: Force a deployment to PyPI
        default: "false"
        required: true

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip wheel setuptools
                  pip install .
            - name: Lint with flake8
              run: |
                  pip install flake8
                  # stop the build if there are Python syntax errors or undefined names
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                  flake8 . --count --exit-zero --statistics
    test:
        needs: lint
        runs-on: ubuntu-latest
        strategy:
            max-parallel: 4
            matrix:
                python-version: [3.8, 3.9]
        steps:
            - uses: actions/checkout@v1
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip wheel setuptools
            - name: Test with tox
              run: |
                  pip install tox
                  tox
    build_wheels:
        name: Build wheels on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [ubuntu-latest]
        needs: test
        steps:
            - uses: actions/checkout@v2
            - name: Install Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.9"
            - name: Install dependencies
              run: python -m pip install --upgrade pip setuptools wheel build
            - name: Build wheels
              run: python -m build --wheel
            - uses: actions/upload-artifact@v2
              with:
                  path: ./dist/*.whl
    build_sdist:
        name: Build source distribution
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
              name: Install Python
              with:
                  python-version: "3.9"
            - name: Install dependencies
              run: python -m pip install --upgrade pip setuptools wheel build
            - name: Build wheels
              run: python -m build --sdist
            - uses: actions/upload-artifact@v2
              with:
                  path: dist/*.tar.gz
    upload_pypi:
        needs: [build_wheels, build_sdist]
        runs-on: ubuntu-latest
        if: >
          (github.event_name == 'release' && github.event.action == 'published')
          || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_trigger == 'true')
        steps:
            - uses: actions/download-artifact@v2
              with:
                  name: artifact
                  path: dist
            - uses: pypa/gh-action-pypi-publish@master
              with:
                  user: __token__
                  password: ${{ secrets.pypi_token }}
                  # To test: repository_url: https://test.pypi.org/legacy/
